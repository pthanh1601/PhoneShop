@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "_ChatBox";
}
<button class="chatbox-open">
    <i class="fa fa-comment fa-2x" aria-hidden="true"></i>
</button>
<button class="chatbox-close">
    <i class="fa fa-times fa-2x" aria-hidden="true"></i>
</button>
<section class="chatbox-popup">
    <header class="chatbox-popup__header">
        <aside style="flex:3">
            <i class="fa fa-user-circle fa-4x chatbox-popup__avatar" aria-hidden="true"></i>
        </aside>
        <aside style="flex:8">
            <h1>Sussanah Austin</h1> Agent (Online)
        </aside>
        <aside style="flex:1">
            <button class="chatbox-maximize"><i class="fa fa-window-maximize" aria-hidden="true"></i></button>
        </aside>
    </header>
    <main class="chatbox-popup__main" id="messages">
        We make it simple and seamless for<br> bussiness and people to talk to each<br> other. Ask us anything.
    </main>
    <footer class="chatbox-popup__footer">
        <aside style="flex:1;color:#888;text-align:center;">
            <i class="fa fa-camera" aria-hidden="true"></i>
        </aside>
        <aside style="flex:10">
            <textarea id="messageInput" type="text" placeholder="Type your message here..." autofocus></textarea>
        </aside>
        <aside style="flex:1;color:#888;text-align:center;">
            <i id="sendButton" class="fa fa-paper-plane" aria-hidden="true"></i>
        </aside>
    </footer>
</section>
<section class="chatbox-panel">
    <header class="chatbox-panel__header">
        <aside style="flex:3">
            <i class="fa fa-user-circle fa-3x chatbox-popup__avatar" aria-hidden="true"></i>
        </aside>
        <aside style="flex:6">
            <h1>Sussanah Austin</h1> Agent (Online)
        </aside>
        <aside style="flex:3;text-align:right;">
            <button class="chatbox-minimize"><i class="fa fa-window-restore" aria-hidden="true"></i></button>
            <button class="chatbox-panel-close"><i class="fa fa-times" aria-hidden="true"></i></button>
        </aside>
    </header>
    <main class="chatbox-panel__main" style="flex:1">
        We make it simple and seamless for<br> bussiness and people to talk to each<br> other. Ask us anything.
    </main>
    <footer class="chatbox-panel__footer">
        <aside style="flex:1;color:#888;text-align:center;">
            <i class="fa fa-camera" aria-hidden="true"></i>
        </aside>
        <aside style="flex:10">
            <textarea type="text" placeholder="Type your message here..." autofocus></textarea>
        </aside>
        <aside style="flex:1;color:#888;text-align:center;">
            <i class="fa fa-paper-plane" aria-hidden="true"></i>
        </aside>
    </footer>
</section>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    connection.on("ReceiveMessage", (sender, message) => {
        const messages = document.getElementById("messages");
        const messageElement = document.createElement('div');
        messageElement.textContent = message;

        if (sender === "Admin") {
            messageElement.classList.add('message', 'admin');
        } else {
            messageElement.classList.add('message', 'customer');
        }

        messages.appendChild(messageElement);

        // Cuộn xuống cuối cùng
        messages.scrollTop = messages.scrollHeight;
    });


    connection.start().catch(err => console.error(err.toString()));

document.getElementById("sendButton").addEventListener("click", async () => {
    const messageInput = document.getElementById('messageInput');
    const messageText = messageInput.value.trim();

    if (messageText !== '') {
        // Thêm tin nhắn khách hàng vào hộp chat
        const chatBox = document.getElementById('messages');
        const messageElement = document.createElement('div');
        messageElement.classList.add('message', 'customer');
        messageElement.textContent = messageText;
        chatBox.appendChild(messageElement);

        // Cuộn xuống cuối cùng
        chatBox.scrollTop = chatBox.scrollHeight;

        // Gửi tin nhắn đến Dialogflow
        try {
            const response = await fetch('https://localhost:7180/chatbot', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ message: messageText })
            });

            if (!response.ok) {
                throw new Error('Server responded with error: ' + response.statusText);
            }

            const result = await response.json();

            if (result.reply) {
                const botMessage = document.createElement('div');
                botMessage.classList.add('message', 'admin');
                botMessage.textContent = result.reply;
                chatBox.appendChild(botMessage);
                
            }
            chatBox.scrollTop = chatBox.scrollHeight;

            // connection.invoke("SendMessageToAdmin", messageText).catch(err => console.error(err.toString()));

        } catch (error) {
            console.error('Error communicating with chatbot:', error);
        }

        // Xóa nội dung trong ô nhập tin nhắn
        messageInput.value = '';
    }
});

</script>
<style>
    .message {
        margin: 5px 0;
        padding: 10px;
        border-radius: 10px;
        max-width: 70%;
    }

        .message.admin {
            background-color: #f0f0f0; /* Màu nền xám nhạt */
            text-align: left; /* Canh trái */
        }

        .message.customer {
            background-color: #d1e7dd; /* Màu nền xanh nhạt */
            text-align: right; /* Canh phải */
            margin-left: auto; /* Đẩy sang phải */
        }

</style>