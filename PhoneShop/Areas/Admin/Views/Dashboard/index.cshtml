@model PhoneShop.ViewModels.AdminDashboardVM
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.Admin.cshtml";
}


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container">
    <div class="row mt-4">
        <!-- Tổng quan -->
        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-header bg-primary text-white">
                    Tổng doanh thu
                </div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TongDoanhThu.ToString("C")</h5>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-header bg-success text-white">
                    Số hóa đơn
                </div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TongSoHoaDon</h5>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-center">
                <div class="card-header bg-success text-white">
                    Số Khách Hàng
                </div>
                <div class="card-body">
                    <h5 class="card-title">@Model.TongSoKhachHang</h5>
                </div>
            </div>
        </div>


    </div>



    <!-- Doanh thu theo tháng -->
    <h2 class="mt-5">Doanh thu theo tháng</h2>
    <canvas id="doanhThuChart" width="400" height="200"></canvas>
    <script>
        var ctx = document.getElementById('doanhThuChart').getContext('2d');
        var doanhThuChart = new Chart(ctx, {
            type: 'bar',  // Chọn loại biểu đồ cột
            data: {
                labels: @Html.Raw(Json.Serialize(Model.DoanhThuTheoThang.Select(x => "Tháng " + x.Thang).ToList())), // Các tháng
                datasets: [{
                    label: 'Doanh thu',
                    data: @Html.Raw(Json.Serialize(Model.DoanhThuTheoThang.Select(x => x.DoanhThu).ToList())), // Doanh thu theo tháng
                    backgroundColor: 'rgba(54, 162, 235, 0.5)', // Màu nền của các cột
                    borderColor: 'rgba(54, 162, 235, 1)', // Màu viền của các cột
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true, // Đảm bảo biểu đồ bắt đầu từ 0
                        ticks: {
                            callback: function (value, index, values) {
                                return value.toLocaleString();  // Hiển thị giá trị đã được định dạng với dấu phân cách hàng nghìn
                            }
                        }
                    }
                }
            }
        });
    </script>

    <!-- Sản phẩm bán chạy -->
    <h2 class="mt-5">Top 5 sản phẩm bán chạy</h2>
    <table class="table table-striped table-bordered mt-3">
        <thead>
            <tr>
                <th>Sản phẩm</th>
                <th>Số lượng bán</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.SanPhamBanChay.Any())
            {
                foreach (var item in Model.SanPhamBanChay)
                {
                    <tr>
                        <td>@item.TenSanPham</td>
                        <td>@item.SoLuongBan</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="2" class="text-center">Không có dữ liệu</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Top 5 khách hàng -->
    <h2 class="mt-5">Top 5 khách hàng</h2>
    <table class="table table-striped table-bordered mt-3">
        <thead>
            <tr>
                <th>Khách hàng</th>
                <th>Số điện thoại</th>
                <th>Số hóa đơn</th>
                <th>Tổng chi tiêu</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.TopKhachHang.Any())
            {
                foreach (var item in Model.TopKhachHang)
                {
                    <tr>
                        <td>@item.HoTen</td>
                        <td>@item.SoDienThoai</td>
                        <td>@item.SoHoaDon</td>
                        <td>@item.TongChiTieu.ToString("C")</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4" class="text-center">Không có dữ liệu</td>
                </tr>
            }
        </tbody>
    </table>
    @* <!-- Tạo dropdown chọn năm -->
    <div>
        <label for="yearSelect">Chọn năm:</label>
        <select id="yearSelect" class="form-control">
            @foreach (var year in Model.DoanhThuTheoThang.Select(x => x.Thang).Distinct())
            {
                <option value="@year">@year</option>
            }
        </select>
    </div> *@

    @* <!-- Biểu đồ đường doanh thu theo năm -->
    <canvas id="lineChart" width="400" height="200"></canvas>

    <!-- Biểu đồ doanh thu theo tháng -->
    <canvas id="pieChart" width="400" height="200"></canvas> *@

    <!-- Script cho biểu đồ -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Biểu đồ doanh thu theo năm
        $.ajax({
            url: '@Url.Action("GetRevenueByYear", "Dashboard", new { area = "Admin" })',
            type: 'GET',
            success: function (data) {
                var labels = data.map(function (item) { return item.Year; });
                var values = data.map(function (item) { return item.Revenue; });

                new Chart("lineChart", {
                    type: "line",
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "Doanh thu theo năm",
                            data: values,
                            borderColor: "#FF5733",
                            fill: false
                        }]
                    }
                });
            }
        });

        // Cập nhật biểu đồ doanh thu theo tháng khi chọn năm
        $('#yearSelect').change(function () {
            var selectedYear = $(this).val();
            $.ajax({
                url: '@Url.Action("GetRevenueByMonth", "Dashboard", new { area = "Admin" })',
                type: 'GET',
                data: { year: selectedYear },
                success: function (data) {
                    var months = data.map(function (item) { return item.Month; });
                    var revenues = data.map(function (item) { return item.Revenue; });

                    new Chart("pieChart", {
                        type: "pie",
                        data: {
                            labels: months.map(m => "Tháng " + m),
                            datasets: [{
                                data: revenues,
                                backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A8', '#A833FF', '#33FFBB', '#FFBB33', '#33FF77', '#FF5733', '#FF33AA', '#5733FF', '#33A8FF']
                            }]
                        }
                    });
                }
            });
        });

        // Lấy doanh thu theo tháng mặc định cho năm hiện tại
        $(document).ready(function () {
            var selectedYear = $('#yearSelect').val();
            $.ajax({
                url: '@Url.Action("GetRevenueByMonth", "Dashboard", new { area = "Admin" })',
                type: 'GET',
                data: { year: selectedYear },
                success: function (data) {
                    var months = data.map(function (item) { return item.Month; });
                    var revenues = data.map(function (item) { return item.Revenue; });

                    new Chart("pieChart", {
                        type: "pie",
                        data: {
                            labels: months.map(m => "Tháng " + m),
                            datasets: [{
                                data: revenues,
                                backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A8', '#A833FF', '#33FFBB', '#FFBB33', '#33FF77', '#FF5733', '#FF33AA', '#5733FF', '#33A8FF']
                            }]
                        }
                    });
                }
            });
        });
    </script>
</div>
