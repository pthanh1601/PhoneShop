@model X.PagedList.IPagedList<PhoneShop.Data.Loai>
@using PhoneShop.Data
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Danh Mục Sản Phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.Admin.cshtml";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<h3 class="mb-4">Danh Mục Sản Phẩm</h3>

<p>
    <a asp-action="ThemDanhMucSanPham" class="btn btn-primary mb-3">
        <i class="bi bi-plus-circle"></i> Thêm Mới
    </a>
</p>

<p class="text-success">@TempData["Message"]</p>

<style>
    /* Chỉnh kiểu bảng */
    .table th,
    .table td {
        vertical-align: middle; /* Căn giữa theo chiều dọc */
        text-align: center; /* Căn giữa theo chiều ngang */
    }

    /* Cuộn mô tả */
    .scrollable-description {
        max-height: 100px; /* Giới hạn chiều cao */
        overflow-y: auto; /* Thêm thanh cuộn dọc */
        word-wrap: break-word; /* Tự động xuống dòng */
        white-space: normal; /* Cho phép xuống dòng */
        border: 1px solid #ddd; /* Bo viền */
        padding: 5px; /* Thêm khoảng cách */
        background-color: #f9f9f9; /* Màu nền nhạt */
    }
</style>

<table class="table table-hover table-striped">
    <thead>
        <tr class="table-warning">
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TenLoai)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().TenLoaiAlias)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().MoTa)</th>
            
            <th>Thao Tác</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.TenLoai)</td>
                <td>@Html.DisplayFor(modelItem => item.TenLoaiAlias)</td>
                <td class="mo-ta">
                    <div class="scrollable-description">
                        @item.MoTa
                    </div>
                </td>
           
                <td>
                    <a asp-action="SuaDanhMucSanPham" asp-route-MaLoai="@item.MaLoai" class="btn btn-warning btn-sm">
                        <i class="bi bi-pencil-square"></i> Sửa
                    </a>
                    <button class="btn btn-danger btn-sm" 
                            onclick="confirmDelete('@item.MaLoai', '@item.TenLoai')">
                        <i class="bi bi-trash3"></i> Xóa
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="product__pagination">
    @Html.PagedListPager(Model, page => Url.Action("DanhMucSanPham", new { page = page }),
        new PagedListRenderOptions
        {
            UlElementClasses = new List<string> { "pagination justify-content-center" },
            LiElementClasses = new List<string> { "page-item" },
            PageClasses = new List<string> { "page-link" }
        })
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Hiển thị xác nhận xóa bằng SweetAlert
    function confirmDelete(maLoai, tenLoai) {
        Swal.fire({
            title: 'Xác nhận xóa',
            text: `Bạn có chắc chắn muốn xóa danh mục "${tenLoai}" không?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Xóa',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/Admin/DanhMucSanPham/XoaDanhMucSanPham?MaLoai=${maLoai}`;
            }
        });
    }
</script>
